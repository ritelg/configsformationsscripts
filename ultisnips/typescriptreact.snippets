# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet getStaticProps "getStaticProps nextjs" b
export async function getStaticProps(context) {
	return {
		props: {
			$1
		},
	}
}
endsnippet


snippet getServerSideProps "getServerSideProps nextjs" b
export async function getServerSideProps(context) {
	return {
		props: {
			$1
		},
	}
}
endsnippet

snippet getStaticPaths "getStaticPaths nextjs" b
export async function getStaticPaths(context) {
	return {
		paths: $1,
		fallback: false
	}
}
endsnippet

snippet test_jest "Architecture de base dâ€™un test Jest" b
describe('$1', () => {
	it('$2', () => {
		$3
	})
})
endsnippet

snippet test_playwright "Architecture de base pour playwright" b
import {render, screen} from '@testing-library/react'
import '@testing-library/jest-dom'


test('$1', async function ({page}) {
	await page.goto('/')
})
endsnippet
